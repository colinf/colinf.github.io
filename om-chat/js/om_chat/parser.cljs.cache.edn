;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name om-chat.parser, :imports nil, :requires {om om.next, om.next om.next, dt cljs-time.core, cljs-time.core cljs-time.core, dt2 cljs-time.coerce, cljs-time.coerce cljs-time.coerce}, :uses nil, :defs {read {:name om-chat.parser/read, :file "src/om_chat/parser.cljs", :line 6, :column 1, :end-line 6, :end-column 15, :meta {:file "/Users/colinf/Projects/om-chat/src/om_chat/parser.cljs", :line 6, :column 11, :end-line 6, :end-column 15}}, thread-with-derived {:protocol-inline nil, :meta {:file "/Users/colinf/Projects/om-chat/src/om_chat/parser.cljs", :line 8, :column 7, :end-line 8, :end-column 26, :arglists (quote ([{:keys [thread/id], :as thread} st]))}, :name om-chat.parser/thread-with-derived, :variadic false, :file "src/om_chat/parser.cljs", :end-column 26, :method-params ([p__22237 st]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [thread/id], :as thread} st]))}, mutate {:name om-chat.parser/mutate, :file "src/om_chat/parser.cljs", :line 31, :column 1, :end-line 31, :end-column 17, :meta {:file "/Users/colinf/Projects/om-chat/src/om_chat/parser.cljs", :line 31, :column 11, :end-line 31, :end-column 17}}}, :require-macros {om om.next, om.next om.next}, :cljs.analyzer/constants {:seen #{:remote :message/text thread/select :default :value :thread/id :thread/messages :state :message/id :message/read :thread/read :threads message/new :thread/selected :messages/by-id :action :selected/thread :message/date :message/author-name :query :hierarchy :threads/by-id}, :order [:hierarchy :default :thread/id :selected/thread :thread/selected :state :value :remote :threads :query thread/select :threads/by-id :thread/read :action message/new :message/text :message/id :message/author-name :message/date :message/read :messages/by-id :thread/messages]}, :doc nil}